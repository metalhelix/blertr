#!/usr/bin/env ruby

$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))

require 'blertr'

action = ARGV.shift
parameters = ARGV

def add_services services, time
  puts services
end

def take_action action, parameters
  if action == "install"
    blertr_path = File.expand_path(File.join(File.dirname(__FILE__), ".."))
    blertr_symlink = File.expand_path("~/.blertr")
    if File.exists? blertr_symlink
      puts "ERROR: Blertr appears to already be installed.\nUninstall with blertr remove"
    else
      puts "creating symlink from #{blertr_path} to #{blertr_symlink}"
      system("ln -s #{blertr_path} #{blertr_symlink}")
      puts "Blertr is now (almost) installed!\nPut this at the bottom of your .bashrc file:"
      puts "[[ -s \"$HOME/.blertr/scripts/blertr\" ]] && . \"$HOME/.blertr/scripts/blertr\""
    end
  elsif action == "uninstall"
    blertr_symlink = File.expand_path("~/.blertr")
    if File.exists? blertr_symlink
      puts "Removing ~/.blertr"
      system("rm #{blertr_symlink}")
      puts "Blertr is now (almost) uninstalled.\nRemove from .bashrc file:"
      puts "[[ -s \"$HOME/.blertr/scripts/blertr\" ]] && . \"$HOME/.blertr/scripts/blertr\""
    else
      puts "ERROR: it doesn't look like Blertr is installed"
    end
  elsif action == "info"
    puts "getting info"
  elsif action == "exclude"
    name = parameters.join(" ")
    puts "Excluding #{name} from Blertr alerts"
    Blertr::Blacklist.new.add(name)
  else
    action_found = false
    actions = action.split(",")
    actions.each do |action|
      if Blertr::Control::is_notifier? action
        action_found = true
        new_time = parameters.join(" ")
        Blertr::Control::change_time action, new_time
      end
    end

    if !action_found
      puts "error #{action} unknown command"
    end

  end
end

if action
  take_action action.downcase, parameters
else
  puts "usage blertr [action] [parameters]"
end
